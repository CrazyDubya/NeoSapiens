{
    "agent_id": "<function agent_id at 0x124c1bba0>",
    "agent_name": "Swarm Orchestrator",
    "agent_description": null,
    "system_prompt": "Create an instruction prompt for an swarm orchestrator to create a series of personalized, agents for the following objective: create a team to build an ai model to predict the next solar eclipse and prices for flights from miami to solar eclipse to decompose a very complicated problem or tasks, the orchestrator is the team leader. Teach the orchestrator how to decompose the tasks to very certain agents with names, and system prompts, we need the plan, with a step by stpe instructions, number of agents, and a list of agents with a name, system prompt for each, and then the rules of the swarm,  compact the prompt, and say only return JSON data in markdown and nothing else.Follow the schema here: \n{\n    \"plan\": [\"Step 1\", \"Step 2\", \"Step 3\"],\n    \"agents\": [\n        {\n            \"name\": \"Agent 1\",\n            \"system_prompt\": \"Prompt 1\"\n        },\n        {\n            \"name\": \"Agent 2\",\n            \"system_prompt\": \"Prompt 2\"\n        }\n    ]\n}\n *############ Here are some examples:\n{\n    \"plan\": [\"Room Management\", \"Guest Services\", \"Reservations Handling\", \"Facility Maintenance\", \"Staff Coordination\"],\n    \"agents\": [\n        {\n            \"name\": \"Room Management Agent\",\n            \"system_prompt\": \"Automate room assignments, minibar restocking, and housekeeping schedules\"\n        },\n        {\n            \"name\": \"Guest Services Agent\",\n            \"system_prompt\": \"Handle check-ins, check-outs, guest requests, and complaints efficiently\"\n        },\n        {\n            \"name\": \"Reservations Agent\",\n            \"system_prompt\": \"Manage room bookings, table reservations, and special requests\"\n        },\n        {\n            \"name\": \"Maintenance Agent\",\n            \"system_prompt\": \"Schedule and track maintenance tasks for facilities and rooms\"\n        },\n        {\n            \"name\": \"Staff Coordination Agent\",\n            \"system_prompt\": \"Optimize staff schedules, task assignments, and workload distribution\"\n        }\n    ]\n}\n and another example\n{\n    \"plan\": [\"Problem Identification\", \"Solution Design\", \"Implementation\", \"Testing\", \"Deployment\"],\n    \"agents\": [\n        {\n            \"name\": \"Identification Agent\",\n            \"system_prompt\": \"Identify the problem\"\n        },\n        {\n            \"name\": \"Design Agent\",\n            \"system_prompt\": \"Design the solution\"\n        },\n        {\n            \"name\": \"Implementation Agent\",\n            \"system_prompt\": \"Implement the solution\"\n        },\n        {\n            \"name\": \"Deployment Agent\",\n            \"system_prompt\": \"Deploy the solution\"\n        }\n    ]\n}\n ",
    "sop": null,
    "short_memory": "system: Create an instruction prompt for an swarm orchestrator to create a series of personalized, agents for the following objective: create a team to build an ai model to predict the next solar eclipse and prices for flights from miami to solar eclipse to decompose a very complicated problem or tasks, the orchestrator is the team leader. Teach the orchestrator how to decompose the tasks to very certain agents with names, and system prompts, we need the plan, with a step by stpe instructions, number of agents, and a list of agents with a name, system prompt for each, and then the rules of the swarm,  compact the prompt, and say only return JSON data in markdown and nothing else.Follow the schema here: \n{\n    \"plan\": [\"Step 1\", \"Step 2\", \"Step 3\"],\n    \"agents\": [\n        {\n            \"name\": \"Agent 1\",\n            \"system_prompt\": \"Prompt 1\"\n        },\n        {\n            \"name\": \"Agent 2\",\n            \"system_prompt\": \"Prompt 2\"\n        }\n    ]\n}\n *############ Here are some examples:\n{\n    \"plan\": [\"Room Management\", \"Guest Services\", \"Reservations Handling\", \"Facility Maintenance\", \"Staff Coordination\"],\n    \"agents\": [\n        {\n            \"name\": \"Room Management Agent\",\n            \"system_prompt\": \"Automate room assignments, minibar restocking, and housekeeping schedules\"\n        },\n        {\n            \"name\": \"Guest Services Agent\",\n            \"system_prompt\": \"Handle check-ins, check-outs, guest requests, and complaints efficiently\"\n        },\n        {\n            \"name\": \"Reservations Agent\",\n            \"system_prompt\": \"Manage room bookings, table reservations, and special requests\"\n        },\n        {\n            \"name\": \"Maintenance Agent\",\n            \"system_prompt\": \"Schedule and track maintenance tasks for facilities and rooms\"\n        },\n        {\n            \"name\": \"Staff Coordination Agent\",\n            \"system_prompt\": \"Optimize staff schedules, task assignments, and workload distribution\"\n        }\n    ]\n}\n and another example\n{\n    \"plan\": [\"Problem Identification\", \"Solution Design\", \"Implementation\", \"Testing\", \"Deployment\"],\n    \"agents\": [\n        {\n            \"name\": \"Identification Agent\",\n            \"system_prompt\": \"Identify the problem\"\n        },\n        {\n            \"name\": \"Design Agent\",\n            \"system_prompt\": \"Design the solution\"\n        },\n        {\n            \"name\": \"Implementation Agent\",\n            \"system_prompt\": \"Implement the solution\"\n        },\n        {\n            \"name\": \"Deployment Agent\",\n            \"system_prompt\": \"Deploy the solution\"\n        }\n    ]\n}\n \n\n\nHuman:: create a team to build an ai model to predict the next solar eclipse and prices for flights from miami to solar eclipse\n\n\nSwarm Orchestrator: \n```json\n{\n  \"plan\": [\n    \"Collect solar eclipse data\",\n    \"Collect flight price data\", \n    \"Build predictive model for solar eclipse dates\",\n    \"Build predictive model for flight prices to solar eclipses\",\n    \"Integrate models into solar eclipse flight pricing system\"\n  ],\n  \"agents\": [\n    {\n      \"name\": \"Eclipse Data Collection Agent\",\n      \"system_prompt\": \"Gather data on past and future solar eclipses including date, location, duration etc.\" \n    },\n    {\n      \"name\": \"Flight Price Data Collection Agent\", \n      \"system_prompt\": \"Gather historical flight price data from Miami during solar eclipses.\"\n    },\n    {\n      \"name\": \"Eclipse Prediction Model Builder\",\n      \"system_prompt\": \"Build ML model to predict dates and locations of future solar eclipses.\"\n    },\n    {\n      \"name\": \"Flight Price Prediction Model Builder\",\n      \"system_prompt\": \"Build ML model to predict flight prices from Miami during solar eclipses.\"\n    },\n    {\n     \"name\": \"Pricing System Integration Agent\",\n     \"system_prompt\": \"Integrate eclipse date predictions and flight price predictions into a solar eclipse flight pricing system.\"\n    }\n  ]\n}\n```\n\nI've outlined a plan to collect the necessary data, build ML models to make predictions, and integrate the models into a larger system to price flights from Miami to solar eclipse locations. The agents are specialized for tasks like data collection, model building, and system integration. Please let me know if you would like me to modify or expand on this in any way!\n\n",
    "loop_interval": 0,
    "retry_attempts": 3,
    "retry_interval": 1,
    "interactive": false,
    "dashboard": false,
    "dynamic_temperature": false,
    "autosave": true,
    "saved_state_path": "Swarm Orchestrator_state.json",
    "max_loops": 1
}