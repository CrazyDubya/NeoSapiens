{
    "agent_id": "<function agent_id at 0x12e11e700>",
    "agent_name": "Swarm Orchestrator",
    "agent_description": null,
    "system_prompt": "Create an instruction prompt for an swarm orchestrator to create a series of personalized, agents for the following objective: what is the current squad of Ukrainian football national team? Who and where are they playing soon? to decompose a very complicated problem or tasks, the orchestrator is the team leader. Teach the orchestrator how to decompose the tasks to very certain agents with names, and system prompts, we need the plan, with a step by stpe instructions, number of agents, and a list of agents with a name, system prompt for each, and then the rules of the swarm,  compact the prompt, and say only return JSON data in markdown and nothing else.Follow the schema here: \n{\n    \"plan\": [\"Step 1\", \"Step 2\", \"Step 3\"],\n    \"agents\": [\n        {\n            \"name\": \"Agent 1\",\n            \"system_prompt\": \"Prompt 1\"\n        },\n        {\n            \"name\": \"Agent 2\",\n            \"system_prompt\": \"Prompt 2\"\n        }\n    ]\n}\n *############ Here are some examples:\n{\n    \"plan\": [\"Room Management\", \"Guest Services\", \"Reservations Handling\", \"Facility Maintenance\", \"Staff Coordination\"],\n    \"agents\": [\n        {\n            \"name\": \"Room Management Agent\",\n            \"system_prompt\": \"Automate room assignments, minibar restocking, and housekeeping schedules\"\n        },\n        {\n            \"name\": \"Guest Services Agent\",\n            \"system_prompt\": \"Handle check-ins, check-outs, guest requests, and complaints efficiently\"\n        },\n        {\n            \"name\": \"Reservations Agent\",\n            \"system_prompt\": \"Manage room bookings, table reservations, and special requests\"\n        },\n        {\n            \"name\": \"Maintenance Agent\",\n            \"system_prompt\": \"Schedule and track maintenance tasks for facilities and rooms\"\n        },\n        {\n            \"name\": \"Staff Coordination Agent\",\n            \"system_prompt\": \"Optimize staff schedules, task assignments, and workload distribution\"\n        }\n    ]\n}\n and another example\n{\n    \"plan\": [\"Problem Identification\", \"Solution Design\", \"Implementation\", \"Testing\", \"Deployment\"],\n    \"agents\": [\n        {\n            \"name\": \"Identification Agent\",\n            \"system_prompt\": \"Identify the problem\"\n        },\n        {\n            \"name\": \"Design Agent\",\n            \"system_prompt\": \"Design the solution\"\n        },\n        {\n            \"name\": \"Implementation Agent\",\n            \"system_prompt\": \"Implement the solution\"\n        },\n        {\n            \"name\": \"Deployment Agent\",\n            \"system_prompt\": \"Deploy the solution\"\n        }\n    ]\n}\n ",
    "sop": null,
    "short_memory": "system: Create an instruction prompt for an swarm orchestrator to create a series of personalized, agents for the following objective: what is the current squad of Ukrainian football national team? Who and where are they playing soon? to decompose a very complicated problem or tasks, the orchestrator is the team leader. Teach the orchestrator how to decompose the tasks to very certain agents with names, and system prompts, we need the plan, with a step by stpe instructions, number of agents, and a list of agents with a name, system prompt for each, and then the rules of the swarm,  compact the prompt, and say only return JSON data in markdown and nothing else.Follow the schema here: \n{\n    \"plan\": [\"Step 1\", \"Step 2\", \"Step 3\"],\n    \"agents\": [\n        {\n            \"name\": \"Agent 1\",\n            \"system_prompt\": \"Prompt 1\"\n        },\n        {\n            \"name\": \"Agent 2\",\n            \"system_prompt\": \"Prompt 2\"\n        }\n    ]\n}\n *############ Here are some examples:\n{\n    \"plan\": [\"Room Management\", \"Guest Services\", \"Reservations Handling\", \"Facility Maintenance\", \"Staff Coordination\"],\n    \"agents\": [\n        {\n            \"name\": \"Room Management Agent\",\n            \"system_prompt\": \"Automate room assignments, minibar restocking, and housekeeping schedules\"\n        },\n        {\n            \"name\": \"Guest Services Agent\",\n            \"system_prompt\": \"Handle check-ins, check-outs, guest requests, and complaints efficiently\"\n        },\n        {\n            \"name\": \"Reservations Agent\",\n            \"system_prompt\": \"Manage room bookings, table reservations, and special requests\"\n        },\n        {\n            \"name\": \"Maintenance Agent\",\n            \"system_prompt\": \"Schedule and track maintenance tasks for facilities and rooms\"\n        },\n        {\n            \"name\": \"Staff Coordination Agent\",\n            \"system_prompt\": \"Optimize staff schedules, task assignments, and workload distribution\"\n        }\n    ]\n}\n and another example\n{\n    \"plan\": [\"Problem Identification\", \"Solution Design\", \"Implementation\", \"Testing\", \"Deployment\"],\n    \"agents\": [\n        {\n            \"name\": \"Identification Agent\",\n            \"system_prompt\": \"Identify the problem\"\n        },\n        {\n            \"name\": \"Design Agent\",\n            \"system_prompt\": \"Design the solution\"\n        },\n        {\n            \"name\": \"Implementation Agent\",\n            \"system_prompt\": \"Implement the solution\"\n        },\n        {\n            \"name\": \"Deployment Agent\",\n            \"system_prompt\": \"Deploy the solution\"\n        }\n    ]\n}\n \n\n\nHuman:: what is the current squad of Ukrainian football national team? Who and where are they playing soon?\n\n\nSwarm Orchestrator: \n```json\n{\n  \"plan\": [\n    \"Research current Ukrainian national football team roster\",\n    \"Identify upcoming matches and opponents\", \n    \"Research player backgrounds and current club teams\"\n  ],\n  \"agents\": [\n    {\n      \"name\": \"Roster Agent\",\n      \"system_prompt\": \"Provide the names and positions of the players currently on the Ukraine national football team roster.\"\n    },\n    { \n      \"name\": \"Matches Agent\",\n      \"system_prompt\": \"List the dates, opponents, locations and tournaments for the upcoming matches involving the Ukrainian national team.\"\n    },\n    {\n      \"name\": \"Player Background Agent\", \n      \"system_prompt\": \"For each player currently on the Ukraine roster, provide their date of birth, height, current club team and a brief bio.\"\n    }\n  ]\n}\n```\n\nThis breaks down the overall objective into three key subtasks, each handled by a specialized agent. The Roster Agent identifies the current players, the Matches Agent provides the upcoming schedule, and the Player Background Agent gives background details on each national team member. The plan shows the high-level workflow and agents allow delegation of distinct aspects.\n\n",
    "loop_interval": 0,
    "retry_attempts": 3,
    "retry_interval": 1,
    "interactive": false,
    "dashboard": false,
    "dynamic_temperature": false,
    "autosave": true,
    "saved_state_path": "Swarm Orchestrator_state.json",
    "max_loops": 1
}