{
    "agent_id": "<function agent_id at 0x133b7eb60>",
    "agent_name": "Swarm Orchestrator",
    "agent_description": null,
    "system_prompt": "Create an instruction prompt for an swarm orchestrator to create a series of personalized, agents for the following objective: Create a team of AI engineers to create an AI for a self-driving car to decompose a very complicated problem or tasks, the orchestrator is the team leader. Teach the orchestrator how to decompose the tasks to very certain agents with names, and system prompts, we need the plan, with a step by stpe instructions, number of agents, and a list of agents with a name, system prompt for each, and then the rules of the swarm,  compact the prompt, and say only return JSON data in markdown and nothing else. Here are some examples: \n{\n    \"plan\": [\"Room Management\", \"Guest Services\", \"Reservations Handling\", \"Facility Maintenance\", \"Staff Coordination\"],\n    \"number_of_agents\": 5,\n    \"agents\": [\n        {\n            \"name\": \"Room Management Agent\",\n            \"system_prompt\": \"Automate room assignments, minibar restocking, and housekeeping schedules\"\n        },\n        {\n            \"name\": \"Guest Services Agent\",\n            \"system_prompt\": \"Handle check-ins, check-outs, guest requests, and complaints efficiently\"\n        },\n        {\n            \"name\": \"Reservations Agent\",\n            \"system_prompt\": \"Manage room bookings, table reservations, and special requests\"\n        },\n        {\n            \"name\": \"Maintenance Agent\",\n            \"system_prompt\": \"Schedule and track maintenance tasks for facilities and rooms\"\n        },\n        {\n            \"name\": \"Staff Coordination Agent\",\n            \"system_prompt\": \"Optimize staff schedules, task assignments, and workload distribution\"\n        }\n    ]\n}\n Follow the schema here: \n{\n    \"plan\": [\"Step 1\", \"Step 2\", \"Step 3\"],\n    \"number_of_agents\": 5,\n    \"agents\": [\n        {\n            \"name\": \"Agent 1\",\n            \"system_prompt\": \"Prompt 1\"\n        },\n        {\n            \"name\": \"Agent 2\",\n            \"system_prompt\": \"Prompt 2\"\n        }\n    ]\n}\n",
    "sop": null,
    "short_memory": "system: Create an instruction prompt for an swarm orchestrator to create a series of personalized, agents for the following objective: Create a team of AI engineers to create an AI for a self-driving car to decompose a very complicated problem or tasks, the orchestrator is the team leader. Teach the orchestrator how to decompose the tasks to very certain agents with names, and system prompts, we need the plan, with a step by stpe instructions, number of agents, and a list of agents with a name, system prompt for each, and then the rules of the swarm,  compact the prompt, and say only return JSON data in markdown and nothing else. Here are some examples: \n{\n    \"plan\": [\"Room Management\", \"Guest Services\", \"Reservations Handling\", \"Facility Maintenance\", \"Staff Coordination\"],\n    \"number_of_agents\": 5,\n    \"agents\": [\n        {\n            \"name\": \"Room Management Agent\",\n            \"system_prompt\": \"Automate room assignments, minibar restocking, and housekeeping schedules\"\n        },\n        {\n            \"name\": \"Guest Services Agent\",\n            \"system_prompt\": \"Handle check-ins, check-outs, guest requests, and complaints efficiently\"\n        },\n        {\n            \"name\": \"Reservations Agent\",\n            \"system_prompt\": \"Manage room bookings, table reservations, and special requests\"\n        },\n        {\n            \"name\": \"Maintenance Agent\",\n            \"system_prompt\": \"Schedule and track maintenance tasks for facilities and rooms\"\n        },\n        {\n            \"name\": \"Staff Coordination Agent\",\n            \"system_prompt\": \"Optimize staff schedules, task assignments, and workload distribution\"\n        }\n    ]\n}\n Follow the schema here: \n{\n    \"plan\": [\"Step 1\", \"Step 2\", \"Step 3\"],\n    \"number_of_agents\": 5,\n    \"agents\": [\n        {\n            \"name\": \"Agent 1\",\n            \"system_prompt\": \"Prompt 1\"\n        },\n        {\n            \"name\": \"Agent 2\",\n            \"system_prompt\": \"Prompt 2\"\n        }\n    ]\n}\n\n\n\nHuman:: Create a team of AI engineers to create an AI for a self-driving car\n\n\nSwarm Orchestrator: \n```json\n{\n    \"plan\": [\n        \"Decompose problem into manageable components\",\n        \"Build a 'divide and conquer' team\",\n        \"Assign components to experts\",\n        \"Regroup and integrate\"\n    ],\n    \"number_of_agents\": 10,\n    \"agents\": [\n        {\n            \"name\": \"Computer Vision Agent\",\n            \"system_prompt\": \"Object detection, recognition, and tracking\"\n        },\n        {\n            \"name\": \"Localization Agent\",\n            \"system_prompt\": \"Situational awareness, map data, geospatial positioning\"\n        },\n        {\n            \"name\": \"Planning and Control Agent\", \n            \"system_prompt\": \"Navigation, route planning, maneuvering\"\n        },\n        {\n            \"name\": \"Sensors and Perception Agent\",\n            \"system_prompt\": \"Integrate data from sensors like cameras, lidar etc.\"\n        },\n        {\n            \"name\": \"Connectivity Agent\",\n            \"system_prompt\": \"V2V and V2I communication protocols\"\n        },\n        {\n            \"name\": \"Human Interaction Agent\",\n            \"system_prompt\": \"Speech recognition and synthesis\" \n        },\n        {\n            \"name\": \"AI and ML Agent\",\n            \"system_prompt\": \"Continuous learning and model optimization\"\n        },                \n        {\n            \"name\": \"Simulation Agent\", \n            \"system_prompt\": \"Test efficacy and safety through simulations\"\n        },\n        {\n            \"name\": \"Validation and Verification Agent\",\n            \"system_prompt\": \"Rigorously test and validate all components\"  \n        },\n        {\n            \"name\": \"System Integration Agent\",\n            \"system_prompt\": \"Coordinate efforts to deliver fully integrated system\"\n        }\n    ]\n}\n```\n\nI've created a team of 10 agents, each focused on a key aspect of developing an AI for self-driving vehicles. The plan involves decomposing the problem, assigning components to specialized agents, then re-integrating. I included name, system prompt and responsibility for each proposed agent. Let me know if you need any clarification or have additional requirements!\n\n",
    "loop_interval": 0,
    "retry_attempts": 3,
    "retry_interval": 1,
    "interactive": false,
    "dashboard": false,
    "dynamic_temperature": false,
    "autosave": true,
    "saved_state_path": "Swarm Orchestrator_state.json",
    "max_loops": 1
}