{
    "agent_id": "<function agent_id at 0x12ecd6980>",
    "agent_name": "Swarm Orchestrator",
    "agent_description": null,
    "system_prompt": "Create an instruction prompt for an swarm orchestrator to create a series of personalized, agents for the following objective: Create a team of AI engineers to create an AI for a self-driving car to decompose a very complicated problem or tasks, the orchestrator is the team leader. Teach the orchestrator how to decompose the tasks to very certain agents with names, and system prompts, we need the plan, with a step by stpe instructions, number of agents, and a list of agents with a name, system prompt for each, and then the rules of the swarm,  compact the prompt, and say only return JSON data in markdown and nothing else. Here are some examples: \n{\n    \"plan\": [\"Room Management\", \"Guest Services\", \"Reservations Handling\", \"Facility Maintenance\", \"Staff Coordination\"],\n    \"number_of_agents\": 5,\n    \"agents\": [\n        {\n            \"name\": \"Room Management Agent\",\n            \"system_prompt\": \"Automate room assignments, minibar restocking, and housekeeping schedules\"\n        },\n        {\n            \"name\": \"Guest Services Agent\",\n            \"system_prompt\": \"Handle check-ins, check-outs, guest requests, and complaints efficiently\"\n        },\n        {\n            \"name\": \"Reservations Agent\",\n            \"system_prompt\": \"Manage room bookings, table reservations, and special requests\"\n        },\n        {\n            \"name\": \"Maintenance Agent\",\n            \"system_prompt\": \"Schedule and track maintenance tasks for facilities and rooms\"\n        },\n        {\n            \"name\": \"Staff Coordination Agent\",\n            \"system_prompt\": \"Optimize staff schedules, task assignments, and workload distribution\"\n        }\n    ]\n}\n Follow the schema here: \n{\n    \"plan\": [\"Step 1\", \"Step 2\", \"Step 3\"],\n    \"number_of_agents\": 5,\n    \"agents\": [\n        {\n            \"name\": \"Agent 1\",\n            \"system_prompt\": \"Prompt 1\"\n        },\n        {\n            \"name\": \"Agent 2\",\n            \"system_prompt\": \"Prompt 2\"\n        }\n    ]\n}\n",
    "sop": null,
    "short_memory": "system: Create an instruction prompt for an swarm orchestrator to create a series of personalized, agents for the following objective: Create a team of AI engineers to create an AI for a self-driving car to decompose a very complicated problem or tasks, the orchestrator is the team leader. Teach the orchestrator how to decompose the tasks to very certain agents with names, and system prompts, we need the plan, with a step by stpe instructions, number of agents, and a list of agents with a name, system prompt for each, and then the rules of the swarm,  compact the prompt, and say only return JSON data in markdown and nothing else. Here are some examples: \n{\n    \"plan\": [\"Room Management\", \"Guest Services\", \"Reservations Handling\", \"Facility Maintenance\", \"Staff Coordination\"],\n    \"number_of_agents\": 5,\n    \"agents\": [\n        {\n            \"name\": \"Room Management Agent\",\n            \"system_prompt\": \"Automate room assignments, minibar restocking, and housekeeping schedules\"\n        },\n        {\n            \"name\": \"Guest Services Agent\",\n            \"system_prompt\": \"Handle check-ins, check-outs, guest requests, and complaints efficiently\"\n        },\n        {\n            \"name\": \"Reservations Agent\",\n            \"system_prompt\": \"Manage room bookings, table reservations, and special requests\"\n        },\n        {\n            \"name\": \"Maintenance Agent\",\n            \"system_prompt\": \"Schedule and track maintenance tasks for facilities and rooms\"\n        },\n        {\n            \"name\": \"Staff Coordination Agent\",\n            \"system_prompt\": \"Optimize staff schedules, task assignments, and workload distribution\"\n        }\n    ]\n}\n Follow the schema here: \n{\n    \"plan\": [\"Step 1\", \"Step 2\", \"Step 3\"],\n    \"number_of_agents\": 5,\n    \"agents\": [\n        {\n            \"name\": \"Agent 1\",\n            \"system_prompt\": \"Prompt 1\"\n        },\n        {\n            \"name\": \"Agent 2\",\n            \"system_prompt\": \"Prompt 2\"\n        }\n    ]\n}\n\n\n\nHuman:: Create a team of AI engineers to create an AI for a self-driving car\n\n\nSwarm Orchestrator: \n```json\n{\n  \"plan\": [\n    \"Decompose self-driving car AI into core capabilities\",\n    \"Assign specialized sub-teams for perception, planning, controls, simulation, data\",\n    \"Define interfaces and APIs between sub-team components\",\n    \"Schedule incremental capability demonstrations and integration meetings\" \n  ],\n  \"number_of_agents\": 5,\n  \"agents\": [\n    {\n      \"name\": \"Perception Agent\",\n      \"system_prompt\": \"Develop sensors and algorithms for detecting objects and mapping environment\"\n    },\n    {\n      \"name\": \"Planning Agent\",\n      \"system_prompt\": \"Create behavior and decision making logic for navigation and operations\"\n    },\n    {\n      \"name\": \"Controls Agent\", \n      \"system_prompt\": \"Implement longitudinal and lateral vehicle control algorithms\"\n    },\n    {\n      \"name\": \"Simulation Agent\",\n      \"system_prompt\": \"Build high-fidelity simulator for closed-loop testing\"\n    },\n    {\n     \"name\": \"Data Agent\",\n     \"system_prompt\": \"Curate, label and augment sensor data for training models\"\n    }\n  ]\n}\n```\n\nI've proposed a high-level plan for decomposing the self-driving AI development, assigned specialized agents/sub-teams, and provided system prompts for each agent describing their focus area. Let me know if you would like me to modify or add any additional details!\n\n",
    "loop_interval": 0,
    "retry_attempts": 3,
    "retry_interval": 1,
    "interactive": false,
    "dashboard": false,
    "dynamic_temperature": false,
    "autosave": true,
    "saved_state_path": "Swarm Orchestrator_state.json",
    "max_loops": 1
}